name: Image build on event

on: [push]


jobs:
  build:

    runs-on: ubuntu-22.04
    if: "github.event_name == 'push' && !contains(github.event.head_commit.modified, 'last.releases')"      
    strategy:
      fail-fast: false # Don't fail all if any of the jobs is failing
      matrix:
        TESTING: [release]
        TARGET: [pi-bullseye] # <-- Add targets here!


    steps:
    # - name: Maximize build space
    #   uses: easimon/maximize-build-space@master
    #   with:
    #     root-reserve-mb: 512
    #     swap-size-mb: 10
    #     remove-dotnet: 'true'
    #     remove-android: 'true'
    #     remove-haskell: 'true'
    #     overprovision-lvm: 'true'
    # - name: remove even more
    #   run: |
    #     sudo apt-get purge -y \
    #       '^llvm-.*' \
    #       'php.*' \
    #       '^mongodb-.*' \
    #       '^mysql-.*' \
    #       azure-cli \
    #       google-chrome-stable \
    #       firefox \
    #       powershell \
    #       microsoft-edge-stable \
    #       mono-devel \
    #       google-cloud-cli \
    #       dotnet-sdk-8.0 \
    #       dotnet-sdk-7.0 \
    #       temurin-21-jdk \
    #       dotnet-sdk-6.0 \
    #       temurin-17-jdk \
    #       temurin-11-jdk \
    #       gcc-13 \
    #       temurin-8-jdk \
    #       g++-13 \
    #       gfortran-13 \
    #       cpp-13 \
    #       openjdk-11-jre-headless
    #     sudo df -h
    #     sudo apt-get autoremove -y
    #     sudo apt-get clean
    - name: Setup env
      run: |
        dpkg-query -Wf '${Installed-Size}\t${Package}\n' | sort -nr | awk '{printf "%.2f MB \t %s\n", $1/(1024), $2}'
        echo "DT=$(date +'%Y-%m-%d_%H%M')" >> $GITHUB_ENV
        echo "BRANCH=${GITHUB_REF##*/}" >> $GITHUB_ENV
    
    
    ### ONLY THIS RELEVANT FOR BUILDING ###
    - uses: actions/checkout@v3
    - name: update
      run: sudo apt-get update
    - name: dep
      run: sudo apt-get install -y unzip tree curl git qemu qemu-user-static binfmt-support
    - name: debug
      run: sudo touch /host-is-here
    - name: update
      run: |
        sudo git clone https://github.com/OpenHD/OpenHD-ImageBuilder
        sudo mv OpenHD-ImageBuilder/images .
        sudo mv OpenHD-ImageBuilder/stages/01-Baseimage stages/
        sudo rm -Rf OpenHD-ImageBuilder
    - name: configure
      run: sudo bash build.sh ${{ matrix.TARGET }} ${{ matrix.TESTING }}
    - name: debug
      run: |
        tree  